@model DoAnCoSo.Models.tbLoaiTruong

<div>
    <h4>Loại trường</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TenLoaiTruong)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TenLoaiTruong)
        </dd>
    </dl>
    
    <form asp-action="Delete" onsubmit="return confirmDelete()">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <!-- Trong phần head của view hoặc layout -->
    <script>
        // Hàm hiển thị thông báo với thời gian tự đóng
        function showSuccessMessage() {
            Swal.fire({
                icon: 'success',
                title: '@TempData["SuccessMessage"]',
                showConfirmButton: false,
                timer: 1500,
                onClose: function () {
                        window.location.href = '@Url.Action("Index", "LoaiTruongs")';
                    }
                }
            });
        }

        // Hàm hiển thị thông báo lỗi với thời gian tự đóng
        function showErrorMessage() {
            Swal.fire({
                icon: 'error',
                title: '@TempData["ErrorMessage"]',
                showConfirmButton: false,
                timer: 1500
            });
        }

        // Gọi hàm hiển thị thông báo khi SuccessMessage hoặc ErrorMessage có giá trị
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                showSuccessMessage();
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                showErrorMessage();
            </text>
        }
    </script>


}