@using DoAnCoSo.Models
@model DoAnCoSo.Models.tbCuocThi

@{
    ApplicationDbContext context = new ApplicationDbContext();
    var tbquyDinhs = from a in context.tbQuyDinh
                     where a.TrangThai != 0
                     select a;
    List<tbQuyDinh> listQuyDinh = tbquyDinhs.ToList();

    var tbnoiDungs = from b in context.tbNoiDung
                     where b.TrangThai != 0
                     select b;
    List<tbNoiDung> listNoiDung = tbnoiDungs.ToList();

    var tbLoaiTruongs = from b in context.tbLoaiTruong
                     where b.TrangThai != 0
                     select b;
    List<tbLoaiTruong> listLoaiTruong = tbLoaiTruongs.ToList();
}

<style>
    /* Định dạng màu chủ đạo xanh dương */
    .add-school {
        font-family: Arial, sans-serif;
        background-color: #f2f2f2;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .add-school h4 {
        color: #black;
        margin-bottom: 20px;
    }

    .add-school label.control-label {
        color: #007bff;
        font-weight: bold;
    }

    .add-school select {
        border-radius: 5px;
        border: 1px solid #ccc;
        padding: 10px;
        width: 100%;
        margin-bottom: 10px;
    }

    .add-school-input {
        border-radius: 5px;
        border: 1px solid #ccc;
        padding: 10px;
        width: 98%;
        margin-bottom: 10px;
    }

    .add-school input[type="text"],
    .add-school input[type="submit"] {
        border-radius: 5px;
        border: 1px solid #ccc;
        padding: 10px;
        width: 98%;
        margin-bottom: 10px;
    }

    .add-school input[type="submit"] {
        background-color: #007bff;
        color: #fff;
        font-weight: bold;
        cursor: pointer;
    }

    .add-school input[type="submit"]:hover {
        background-color: #0056b3;
    }

    .text-danger {
        color: #dc3545;
        margin-top: 5px;
    }

    .step-container {
        display: none;
    }

    .step-container.active {
        display: block;
    }

    .form-group {
        margin-bottom: 10px;
    }
    
    .form-group button{
        cursor: pointer;
    }

    .checkbox-list {
        display: flex;
        flex-direction: column;
    }

    .checkbox-item {
        margin-bottom: 10px;
    }

    .pointer-cursor {
        cursor: pointer;
    }

    .checkbox-item input[type="checkbox"] {
        margin-right: 5px;
    }

    .custom-btn {
        background-color: #007bff; /* Primary blue color */
        border: none; /* Remove default border */
        color: white; /* Text color */
        padding: 0.75em 1.5em; /* Padding using em units */
        font-size: 1em; /* Font size using em units */
        border-radius: 5px; /* Rounded corners */
        transition: background-color 0.3s ease, padding 0.3s ease, font-size 0.3s ease; /* Smooth transition for background color, padding, and font size */
        width: 100%; /* Full width of the parent container */
        max-width: 1350px; /* Maximum width */
        display: block; /* Make it a block element */
        margin: 0 auto; /* Center the button horizontally */
    }

        .custom-btn:hover {
            background-color: #0056b3; /* Darker blue on hover */
        }

        .custom-btn:focus {
            outline: none; /* Remove default focus outline */
            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5); /* Custom focus outline */
        }

        .custom-btn:active {
            background-color: #004085; /* Even darker blue on active */
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); /* Add shadow effect on active */
        }

    .custom-btn-right {
        margin-top: 5px; /* Expand to fill remaining space */
    }

    /* Media Queries for Responsive Design */
    @@media (max-width: 768px) {
        .custom-btn {
            padding: 0.6em 1.2em; /* Smaller padding for small screens */
            font-size: 0.9em; /* Smaller font size for small screens */
        }
    }

    @@media (max-width: 480px) {
        .custom-btn {
            padding: 0.5em 1em; /* Even smaller padding for very small screens */
            font-size: 0.8em; /* Even smaller font size for very small screens */
        }
    }
</style>

<div class="add-school">
    <h4>Thêm cuộc thi</h4>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <!-- Giai đoạn 1: Nhập thông tin cuộc thi -->
                <div id="step-1" class="step-container active">
                    <div class="form-group">
                        <label asp-for="TenCuocThi" class="control-label">Tên cuộc thi</label>
                        <input asp-for="TenCuocThi" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label asp-for="NgayThi" class="control-label">Ngày thi</label>
                        <input asp-for="NgayThi" class="form-control add-school-input" />
                    </div>
                    <div class="form-group">
                        <label asp-for="SoLuongThiSinh" class="control-label">Số lượng</label>
                        <input asp-for="SoLuongThiSinh" class="form-control add-school-input" />
                    </div>
                    <div class="form-group">
                        <label asp-for="DiaDiem" class="control-label">Địa điểm</label>
                        <input asp-for="DiaDiem" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label asp-for="MonThiId" class="control-label">Tên môn thi</label>
                        <select asp-for="MonThiId" class="form-control" asp-items="ViewBag.MonThiName"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="LoaiTruongId" class="control-label">Cấp học </label>
                        <select asp-for="LoaiTruongId" class="form-control" asp-items="@(new SelectList(listLoaiTruong, "Id", "TenLoaiTruong"))"></select>
                    </div>
                    <!-- Nút để chuyển sang giai đoạn chọn quy định -->
                    <div class="form-group">
                        <button type="button" onclick="nextStep(2)" class="btn btn-primary custom-btn">Tiếp tục</button>
                    </div>
                </div>

                <!-- Giai đoạn 2: Chọn quy định cuộc thi -->
                <div id="step-2" class="step-container">
                    <div class="form-group">
                        <label class="control-label">Chọn quy định</label>
                        <div class="checkbox-list">
                            @foreach (var item in listQuyDinh)
                            {
                                <div class="checkbox-item">
                                    <input type="checkbox" id="quyDinh_@item.Id" name="selectedQuyDinhs" value="@item.Id" class="pointer-cursor">
                                    <label for="quyDinh_@item.Id">@item.TenQuyDinh</label>
                                </div>
                            }
                        </div>
                    </div>
                    <!-- Nút để chuyển sang giai đoạn chọn nội dung -->
                    <div class="form-group">
                            <button type="button" onclick="nextStep(1)" class="btn btn-primary custom-btn custom-btn-left">Quay lại</button>
                            <button type="button" onclick="nextStep(3)" class="btn btn-primary custom-btn custom-btn-right">Tiếp tục</button>
                    </div>
                </div>

                <!-- Giai đoạn 3: Chọn nội dung thi -->
                <div id="step-3" class="step-container">
                    <div class="form-group">
                        <label class="control-label">Chọn nội dung</label>
                        <div class="checkbox-list">
                            @foreach (var item in listNoiDung)
                            {
                                <div class="checkbox-item">
                                    <input type="checkbox" id="noiDung_@item.Id" name="selectedNoiDungs" value="@item.Id" class="pointer-cursor">
                                    <label for="noiDung_@item.Id">@item.TenNoiDung</label>
                                </div>
                            }
                        </div>
                    </div>
                    <!-- Nút hoàn tất quá trình tạo cuộc thi -->
                    <div class="form-group">
                        <button type="button" onclick="nextStep(2)" class="btn btn-primary custom-btn">Quay lại</button>
                        <input type="submit" value="Tạo cuộc thi" class="btn btn-primary " />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    var currentStep = 1;
    var stepContainers = document.getElementsByClassName('step-container');

    function nextStep(step) {
        stepContainers[currentStep - 1].style.display = 'none';
        currentStep = step;
        stepContainers[currentStep - 1].style.display = 'block';
    }
</script>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <!-- Trong phần head của view hoặc layout -->
    <script>
        // Hàm hiển thị thông báo với thời gian tự đóng
        function showSuccessMessage() {
            Swal.fire({
                icon: 'success',
                title: '@TempData["SuccessMessage"]',
                showConfirmButton: false,
                timer: 1500,
                onClose: function () {
                    // Sau khi thông báo tự đóng, chuyển hướng đến trang Index
                    window.location.href = '@Url.Action("Index", "CuocThis")';
                }
            });
        }

        // Hàm hiển thị thông báo lỗi với thời gian tự đóng
        function showErrorMessage() {
            Swal.fire({
                icon: 'error',
                title: '@TempData["ErrorMessage"]',
                showConfirmButton: false,
                timer: 1500
            });
        }

        // Gọi hàm hiển thị thông báo khi SuccessMessage hoặc ErrorMessage có giá trị
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                showSuccessMessage();
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                showErrorMessage();
            </text>
        }
    </script>
}

