@model List<int>
@using DoAnCoSo.Models
@{
    ApplicationDbContext context = new ApplicationDbContext();
    string GetTenLoaiTruong(int loaiTruongId)
    {
        var loaiTruong = context.tbLoaiTruong.FirstOrDefault(lt => lt.Id == loaiTruongId);
        return loaiTruong?.TenLoaiTruong ?? string.Empty;
    }
}
<style>
    .management-board {
        background-color: #f5f5f5;
        padding: 2rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

        .management-board h1 {
            text-align: center;
            margin-bottom: 2rem;
            font-size: 2.5rem;
            font-weight: bold;
        }

    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        gap: 20px;
        max-width: 1000px;
    }

    .card {
        background-color: white;
        border-radius: 0.5rem;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        flex-basis: calc(33.33% - 1rem);
        margin-bottom: 1rem;
        text-decoration: none;
        color: inherit;
        max-width: 330px;
    }

    .card-content {
        display: flex;
        align-items: center;
        padding: 1.2rem;
        max-width: 330px;
    }

    .card-item {
        flex-grow: 1;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }

    .card-value {
        font-size: 2rem;
        font-weight: bold;
    }

    .new-members-notification {
        color: #4CAF50;
        font-weight: bold;
        font-size: 1.2rem;
    }

    .card-image {
    }

        .card-image img {
            max-width: 90px;
        }

    .TaoCuocThi {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 1000px;
        margin-bottom: 1rem;
    }

    .TaoCuocThi-title {
        font-size: 30px;
        font-weight: normal;
        margin: 0;
    }

    .TaoCuocThi .add-button {
        display: inline-block;
        background-color: #007bff;
        color: #fff;
        text-decoration: none;
        padding: 10px 20px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .TaoCuocThi .add-button:hover {
            background-color: #0056b3;
        }

    #BieuDo{
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1000px;
        max-height: 500px;
        margin-bottom: 1rem;
    }
</style>

<div class="management-board">
    <h1>Bảng quản lý</h1>
    <div class="card-container">
        <a href="@Url.Action("DanhSachUser", "Home", new { area = "Admin" })" class="card">
            <div class="card-content">
                <div class="card-item">
                    <p class="card-title">Tổng thí sinh</p>
                    <p class="card-value">@ViewBag.SoLuongUser</p>
                    @if (ViewBag.SoLuongUserMoi > 0)
                    {
                        <p class="new-members-notification">New: @ViewBag.SoLuongUserMoi</p>
                    }
                </div>
                <div class="card-image">
                    <img src="~/images-Login/globe.png" alt="Globe">
                </div>
            </div>
        </a>
        <a href="@Url.Action("Index", "CuocThis", new { area = "Admin" })" class="card">
            <div class="card-content">
                <div class="card-item">
                    <p class="card-title">Tổng cuộc thi</p>
                    <p class="card-value">@ViewBag.SoLuongCuocThi</p>
                </div>
                <div class="card-image">
                    <img src="~/images-Login/cuocthi.png" alt="Competition">
                </div>
            </div>
        </a>
        <div class="card">
            <div class="card-content">
                <div class="card-item">
                    <p class="card-title">Tổng lượt đăng ký</p>
                    <p class="card-value">@ViewBag.SoLuongUserDK</p>
                </div>
                <div class="card-image">
                    <img src="~/images-Login/ghidanh.png" alt="Enrollment">
                </div>
            </div>
        </div>
    </div>

    <div class="TaoCuocThi">
        <p class="TaoCuocThi-title"><i class="fas fa-trophy"></i> Quá trình tạo cuộc thi</p>
        <a class="add-button btn btn-primary" asp-area="Admin" asp-controller="CuocThis" asp-action="Create">Tạo cuộc thi</a>
    </div>

    <canvas id="BieuDo">
        
    </canvas>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

    <script>
        // Lấy dữ liệu mã loại trường từ Model
        var listLoaiTruong = @Html.Raw(Json.Serialize(Model));
        // Lấy dữ liệu tên loại trường từ Model
        var resultTen = @Html.Raw(Json.Serialize(ViewBag.listTenLoaiTruong));

        //Đếm số lượng mã loai trường theo mã loại trường
        var loaiTruongCounts = {};
        for (var i = 0; i < listLoaiTruong.length; i++) {
            var id = listLoaiTruong[i];
            if (loaiTruongCounts[id]) {
                loaiTruongCounts[id]++;
            } else {
                loaiTruongCounts[id] = 1;
            }
        }

        // Chuyển đối tượng loaiTruongCounts thành mảng
        var result = Object.values(loaiTruongCounts);

        var ctx = document.getElementById('BieuDo').getContext('2d');
        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: resultTen,
                datasets: [{
                    label: 'Số lượng',
                    data: result,
                    backgroundColor: [
                        '#8BC34A', // Xanh lá
                        '#FF9800', // Cam
                        '#673AB7', // Tím
                        '#E91E63', // Hồng
                        '#4CAF50', // Xanh lục
                        '#FFC107', // Vàng
                        '#3F51B5', // Xanh dương
                        '#9C27B0', // Tím đậm
                        '#FF5722', // Đỏ
                        '#2196F3'  // Xanh dương đậm
                    ],
                    borderColor: [
                        '#689F38', // Xanh lá đậm
                        '#F57C00', // Cam đậm
                        '#512DA8', // Tím đậm
                        '#C2185B', // Hồng đậm
                        '#388E3C', // Xanh lục đậm
                        '#FFA000', // Vàng đậm
                        '#303F9F', // Xanh dương đậm
                        '#7B1FA2', // Tím đậm hơn
                        '#E64A19', // Đỏ đậm
                        '#1976D2'  // Xanh dương đậm hơn
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Biểu đồ số lượng các loại trường',
                        color: '#000000',
                        font: {
                            size: 24, // Increase size for better visibility
                            weight: 'bold' // Make the text bold
                        }
                    },
                    datalabels: {
                        color: '#000', // Dark color for better visibility
                        anchor: 'center',
                        align: 'center',
                        offset: 0,
                        font: {
                            weight: 'bold',
                            size: 20 // Increase size for better visibility
                        },
                        formatter: (value, context) => {
                            return value === 0 ? '' : value; // Only show values that are not zero
                        }
                    }
                }
            },
            // plugins: [ChartDataLabels]
        });
    </script>
}
