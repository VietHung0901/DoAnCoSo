@using DoAnCoSo.Models;
@model EditUserViewModel


<style>
    .edit-Infomation {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        width: 100%;
        font-family: Arial, sans-serif;
        background-color: #f2f2f2;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .card {
        display: flex;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        max-width: 800px;
        width: 100%;
    }

    .image-container {
        flex-basis: 40%;
        background-color: #f4f4f4;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 10px;
    }

        .image-container img {
            max-width: 100%;
            height: 50%;
            border-radius: 8px;
            margin-bottom: 5px;
        }

        .image-container label {
            cursor: pointer;
            color: #007bff;
            font-size: 0.9em;
        }

            .image-container label:hover {
                color: #0056b3;
            }

    .form-container {
        flex-basis: 60%;
        padding: 15px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label, .form-group H2 {
            font-weight: bold;
            display: block;
            margin-bottom: 3px;
            font-size: 0.9em;
        }

        .form-group input, .form-group select {
            width: 95%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 0.9em;
        }

        .form-group .error {
            color: red;
            font-size: 0.8em;
        }

    .submit-btn {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 8px 15px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9em;
    }

        .submit-btn:hover {
            background-color: #0056b3;
        }
</style>


<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />
    <div class="edit-Infomation">
        <div class="card">
            <div class="image-container">
                @* <img id="profile-image" src="@Model.ImageUrl" alt="Profile Image"> *@
                <img id="profile-image" src="@Model.ImageUrl" alt="Profile Image">
                <label for="image-upload">Thay đổi ảnh</label>
                <input type="file" asp-for="ImageUrl" id="image-upload" style="display: none;">
            </div>

            <div class="form-container">
                <h2>THÔNG TIN CÁ NHÂN</h2>

                <div class="form-group">
                    <label asp-for="CCCD" class="control-label">CCCD</label>
                    <input asp-for="CCCD" class="form-control" readonly />
                </div>
                <div class="form-group">
                    <label asp-for="HoTen" class="control-label">Họ và tê</label>
                    <input asp-for="HoTen" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="NgaySinh" class="control-label">Ngày sinh</label>
                    <input asp-for="NgaySinh" class="form-control" type="date"/>
                </div>
                <div class="form-group">
                    <label asp-for="DiaChi" class="control-label">Địa chỉ</label>
                    <input asp-for="DiaChi" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="TruongId" class="control-label">Trường học</label>
                    <select asp-for="TruongId" class="form-control">
                        @{
                            ApplicationDbContext _context = new ApplicationDbContext();
                            string GetNameSchool(int truongId)
                            {
                                return _context.tbTruong.FirstOrDefault(p => p.Id == truongId).TenTruong.ToString();
                            }
                        }
                        @foreach (var item in _context.tbTruong.Where(truong => truong.TrangThai == 1).ToList())
                        {
                            <option value="@item.Id">@GetNameSchool(@item.Id)</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="GioiTinh" class="control-label">Giới tính</label>
                    <select asp-for="GioiTinh" class="form-control">
                        <option value="0">Nữ</option>
                        <option value="1">Nam</option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="SoDienThoai" class="control-label">Số điện thoại</label>
                    <input asp-for="SoDienThoai" class="form-control" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Lưu" class="btn btn-primary save-details" />
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    const profileImage = document.getElementById('profile-image');
    const imageUpload = document.getElementById('image-upload');

    imageUpload.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = () => {
                profileImage.src = reader.result;
            };
            reader.readAsDataURL(file);
        }
    });
</script>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <!-- Trong phần head của view hoặc layout -->
    <script>
        // Hàm hiển thị thông báo với thời gian tự đóng
        function showSuccessMessage() {
            Swal.fire({
                icon: 'success',
                title: '@TempData["SuccessMessage"]',
                showConfirmButton: false,
                timer: 1500,
                onClose: function () {
                }
            });
        }

        // Hàm hiển thị thông báo lỗi với thời gian tự đóng
        function showErrorMessage() {
            Swal.fire({
                icon: 'error',
                title: '@TempData["ErrorMessage"]',
                showConfirmButton: false,
                timer: 1500
            });
        }

        // Gọi hàm hiển thị thông báo khi SuccessMessage hoặc ErrorMessage có giá trị
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                showSuccessMessage();
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                showErrorMessage();
            </text>
        }
    </script>
}